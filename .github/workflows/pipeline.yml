# Nombre del flujo de trabajo
name: Deployment Pipeline

# Eventos que activan el flujo de trabajo
on:
  push:
    branches: [main]  # Se ejecuta cuando hay un push en la rama "main"
  pull_request:
    branches: [main]  # Se ejecuta cuando se abre o sincroniza un PR en la rama "main"

# Definición de trabajos (jobs) que se ejecutarán en este flujo
jobs:

  # Trabajo para evitar builds redundantes
  avoid_reduncy:
    runs-on: ubuntu-latest # Utilizamos la última versión de Ubuntu
    steps:
      - name: Cancel Previous Redundant Builds
        uses: styfle/cancel-workflow-action@0.9.1
        with:
          access_token: ${{ github.token }} # Token de acceso para identificar el flujo actual

  # Job para verificar el código con linting
  lint:
    runs-on: ubuntu-latest # Utilizamos la última versión de Ubuntu
    steps:
      - uses: actions/checkout@v3 # Actualización a la versión más reciente
        with:
          fetch-depth: 0  # Clona todo el historial de la rama
      - uses: actions/setup-node@v3 # Actualización a la versión más reciente de setup-node
        with:
          cache: 'npm'  # Habilita la caché para npm
          node-version: '16'  # Utilizamos la versión LTS más reciente de Node.js
      - name: Install dependencies
        run: npm ci
      - name: Lint
        run: npm run eslint  # Ejecuta el comando de linting
        env:
          CI: true  # Asegura que se ejecute en modo CI para evitar interacciones del usuario
  # Job para construir la aplicación
  build:
    runs-on: ubuntu-latest  # Utilizamos la última versión de Ubuntu
    steps:
      - uses: actions/checkout@v3  # Actualización a la versión más reciente
        with:
          fetch-depth: 0  # Clona todo el historial de la rama

      # Configura Node.js con la versión LTS más reciente (16)
      - uses: actions/setup-node@v3  # Actualización a la versión más reciente de setup-node
        with:
          cache: 'npm'  # Habilita la caché para npm
          node-version: '16'  # Utilizamos la versión LTS más reciente (16)

      # Instala las dependencias de producción sin archivos de lock
      - name: Install dependencies
        run: npm ci

      # Asegúrate de que la opción NODE_OPTIONS no esté configurada innecesariamente
      # Si la opción sigue siendo necesaria, prueba con la versión 16 de Node.js
      - name: Build
        run: npm run build  # Ejecuta el comando de build, que debería estar en tu package.json

      # Sube la carpeta "dist" como artefacto
      - uses: actions/upload-artifact@v3  # Actualización a la versión más reciente de upload-artifact
        with:
          name: dist  # Nombre del artefacto a subir
          path: dist   # Ruta de la carpeta dist para compartir entre jobs


  # Job para ejecutar pruebas unitarias
  test:
    needs: [lint, build]  # Depende de que los jobs "lint" y "build" se completen
    runs-on: ubuntu-latest # Utilizamos la última versión de Ubuntu
    steps:
      - uses: actions/checkout@v3 # Actualización a la versión más reciente
        with:
          fetch-depth: 0
      - uses: actions/setup-node@v3 # Actualización a la versión más reciente de setup-node
        with:
          cache: 'npm'
          node-version: '16'  # Utilizamos la versión LTS más reciente
      - name: Install dependencies
        run: npm ci
      - uses: actions/download-artifact@v3 # La versión v2 sigue siendo válida para esta acción
        with:
          name: dist  # Descarga el artefacto generado en el job "build"
          path: dist
      - name: Test
        run: npm test  # Ejecuta las pruebas unitarias

  # Job para pruebas de extremo a extremo (E2E)
  e2e:
    needs: [lint, build]  # Depende de "lint" y "build"
    runs-on: ubuntu-latest # Utilizamos la última versión de Ubuntu
    steps:
      - uses: actions/checkout@v3 # Actualización a la versión más reciente
        with:
          fetch-depth: 0
      - uses: actions/setup-node@v3 # Actualización a la versión más reciente de setup-node
        with:
          cache: 'npm'
          node-version: '16'  # Utilizamos la versión LTS más reciente
      - name: Install dependencies
        run: npm ci
      - uses: actions/download-artifact@v3 # La versión v2 sigue siendo válida para esta acción
        with:
          name: dist
          path: dist
      - name: E2E tests
        uses: cypress-io/github-action@v3 # Actualización a la versión más reciente de Cypress
        with:
          command: npm run test:e2e  # Comando para ejecutar las pruebas
          start: npm run start-test  # Inicia el servidor antes de las pruebas
          wait-on: http://localhost:5000  # Espera a que el servidor esté disponible
